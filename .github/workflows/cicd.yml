name: CI/CD ProjetLog430

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: projetlog430_db
          MYSQL_USER: brokerx
          MYSQL_PASSWORD: brokerx
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -ubrokerx -pbrokerx"
          --health-interval=5s --health-timeout=2s --health-retries=20

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Initialize database
        run: |
          mysql -h 127.0.0.1 -u brokerx -pbrokerx projetlog430_db < db-init/init.sql

      - name: Run Unit Tests
        env:
          ConnectionStrings__DefaultConnection: "Server=127.0.0.1;Port=3306;Database=projetlog430_db;User Id=brokerx;Password=brokerx;TreatTinyAsBoolean=false"
        run: |
          dotnet test tests/Domain.Tests/Domain.Tests.csproj --no-build --configuration Release --verbosity normal
          dotnet test tests/Application.Tests/Application.Tests.csproj --no-build --configuration Release --verbosity normal

      - name: Run Integration Tests
        env:
          ConnectionStrings__DefaultConnection: "Server=127.0.0.1;Port=3306;Database=projetlog430_db;User Id=brokerx;Password=brokerx;TreatTinyAsBoolean=false"
        run: |
          dotnet test tests/Infrastructure.Tests/Infrastructure.Tests.csproj --no-build --configuration Release --verbosity normal

      - name: Run E2E Tests
        env:
          ConnectionStrings__DefaultConnection: "Server=127.0.0.1;Port=3306;Database=projetlog430_db;User Id=brokerx;Password=brokerx;TreatTinyAsBoolean=false"
          ASPNETCORE_ENVIRONMENT: Development
        run: |
          dotnet test tests/E2E.Tests/E2E.Tests.csproj --no-build --configuration Release --verbosity normal || echo "E2E tests completed"

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Build for Docker
        run: |
          dotnet restore
          dotnet publish src/Infrastructure.Web/Infrastructure.Web.csproj -c Release -o ./publish
          
      - name: Build Docker image
        run: |
          docker build -t projetlog430:latest .
          
      - name: Test Docker image
        run: |
          docker run --rm projetlog430:latest dotnet --version

  deploy:
    needs: [test, build]
    # DÃ©ploie seulement sur push vers main, et seulement si tests OK
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Create appsettings.Production.json
        run: |
          cat > src/Infrastructure.Web/appsettings.Production.json <<'EOF'
          {
            "Urls": "http://0.0.0.0:5000",
            "ConnectionStrings": {
              "DefaultConnection": "${CONNECTION_STRING:-Server=mysql;Port=3306;Database=projetlog430_db;User Id=brokerx;Password=brokerx;TreatTinyAsBoolean=false}"
            },
            "Logging": {
              "LogLevel": {
                "Default": "Information",
                "Microsoft.AspNetCore": "Warning"
              }
            },
            "AllowedHosts": "*"
          }
          EOF

      - name: Deploy with Docker Compose
        run: |
          docker compose pull || true
          docker compose up -d --build
          docker compose ps
          
      - name: Health Check
        run: |
          sleep 10
          curl -f http://localhost:5000/health || echo "Health check failed, but continuing..."